apply plugin: 'com.android.feature'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'



//def keystorePropertiesFile = rootProject.file("keystore.properties")
//def keystoreProperties = new Properties()
//keystoreProperties.load(new FileInputStream(keystorePropertiesFile))


android {
    compileSdkVersion project.compileSdkVersion

    baseFeature = true

//    signingConfigs {
//        config {
//            storeFile file('/Users/jooreill/devroot/keystore/galwaybus_android.jks')
//            keyAlias keystoreProperties['keyAlias']
//            keyPassword keystoreProperties['keyPassword']
//            storePassword keystoreProperties['storePassword']
//            v2SigningEnabled true
//        }
//    }


    defaultConfig {
        minSdkVersion project.minSdkVersion
        targetSdkVersion project.targetSdkVersion

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        vectorDrawables.useSupportLibrary = true

        resValue 'string', 'google_maps_key', System.getenv('GOOGLE_API_KEY')
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //signingConfig signingConfigs.config
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

kapt {
    correctErrorTypes = true
}



dependencies {
    application project(":app-apk")
    //feature project(":ar")

    api "com.google.android.instantapps:instantapps:${instantAppsVer}"
    androidTestImplementation('androidx.test.espresso:espresso-core:3.1.0', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation fileTree(dir: 'libs', include: ['*.jar'])


    api Kotlin.stdLib
    api Kotlin.coroutinesCore
    api Kotlin.coroutinesAndroid

    api Koin.core
    api Koin.android
    api Koin.androidViewModel


    testImplementation "junit:junit:${junitVersion}"
    testImplementation "org.robolectric:robolectric:${robolectricVersion}"
    testImplementation "org.mockito:mockito-core:${mockitoAndroidVersion}"
    testImplementation "com.nhaarman:mockito-kotlin:${mockitoKotlinVersion}"
    testImplementation "com.squareup.okhttp3:mockwebserver:3.11.0"
    androidTestImplementation 'tools.fastlane:screengrab:1.2.0'

    implementation('com.crashlytics.sdk.android:crashlytics:2.9.3@aar') {
        transitive = true
    }

    api Firebase.core

    api PlayServices.location
    api PlayServices.maps

    api 'com.karumi:dexter:4.2.0'
    api 'net.danlew:android.joda:2.10.1'
    api 'com.orhanobut:logger:1.15'

    implementation 'es.voghdev.pdfviewpager:library:1.0.5'

//    implementation 'com.facebook.stetho:stetho:1.5.0'
//    implementation 'com.facebook.stetho:stetho-okhttp3:1.5.0'

    implementation Okhttp.okhttp
    implementation Okhttp.loggingInterceptor

    implementation Retrofit.retrofit
    implementation Retrofit.converterGson
    implementation Retrofit.converterScalars
    implementation Retrofit.coroutinesAdapter

    implementation "com.google.code.gson:gson:2.8.5"


    implementation ArchComponents.navFragmentKtx
    implementation ArchComponents.navUiKtx
    implementation ArchComponents.work

    api "androidx.lifecycle:lifecycle-runtime:2.0.0"
    api "androidx.lifecycle:lifecycle-extensions:2.0.0"
    api 'androidx.lifecycle:lifecycle-reactivestreams:2.0.0'
    api ArchComponents.roomRuntime
    kapt ArchComponents.roomCompiler

    kapt "androidx.lifecycle:lifecycle-compiler:2.0.0"
    testImplementation "androidx.arch.core:core-testing:2.0.0"
}
